name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Server Dependencies
      run: |
        cd Server
        npm ci
    
    - name: Install Client Dependencies
      run: |
        cd client
        npm ci
    
    - name: Run Server Tests
      run: |
        cd Server
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/blog-app-test
    
    - name: Run Client Tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
    
    - name: Build Client
      run: |
        cd client
        npm run build
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        files: ./client/coverage/lcov.info

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Backend image
      uses: docker/build-push-action@v4
      with:
        context: ./Server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/blog-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/blog-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # This could be deploying to AWS, DigitalOcean, etc.



